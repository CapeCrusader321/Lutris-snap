name: lutris
confinement: strict
base: core22
grade: stable
adopt-info: lutris
compression: lzo
architectures:
  - build-on: amd64
    build-for: amd64
    
parts:
  extensible-hooks:
    plugin: dump
    source: https://github.com/diddlesnaps/snapcraft-utils-library.git
    source-subdir: craft-assets/extensible-hooks

  ld-precache:
    after:
      - extensible-hooks
      - gnome-extension-hack
      - lutris
      - lutris-runtime
    plugin: dump
    source: https://github.com/diddlesnaps/snapcraft-utils-library.git
    source-subdir: craft-assets/ld-precache

  enable-i386:
    plugin: nil
    override-build: |
      craftctl build
      if [ "$CRAFT_ARCH_TRIPLET" = "x86_64-linux-gnu" ]; then
        dpkg --add-architecture i386
        apt update
      fi

  gnome-extension-hack:
    plugin: dump
    source: .
    override-pull: |
      craftctl default
      cat <<'EOF' > gnome-extension-hack
      #!/bin/sh
      rm -f "$XDG_DATA_HOME/icons/hicolor/"* || true
      if [ "$CRAFT_ARCH" = "amd64" ]; then
        export LD_LIBRARY_PATH="$SNAP/usr/lib/i386-linux-gnu:$SNAP/lib/i386-linux-gnu:$LD_LIBRARY_PATH"

        export LIBGL_DRIVERS_PATH="$LIBGL_DRIVERS_PATH:$SNAP/usr/lib/i386-linux-gnu/dri"
        export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$LIBGL_DRIVERS_PATH"
        export LIBVA_DRIVERS_PATH="$SNAP/usr/lib/i386-linux-gnu/dri"
      fi
      exec "$@"
      EOF
      chmod +x gnome-extension-hack
    organize:
      gnome-extension-hack: bin/gnome-extension-hack

  lutris:
    after: [enable-i386, gamemode]
    plugin: python
    source: https://github.com/lutris/lutris.git
    parse-info: [share/metainfo/net.lutris.Lutris.metainfo.xml]
    override-pull: |
      craftctl default
      sed -i 's|Icon=.*|Icon=${SNAP}/share/icons/hicolor/scalable/apps/lutris.svg|' share/applications/net.lutris.Lutris.desktop
    build-packages:
      - gobject-introspection
      - libgirepository1.0-dev
      - python3
      - python3-gi
      - python3-pil
      - python3-requests
      - python3-setproctitle
      - python3-yaml
    override-build: |
      craftctl default
      # WORKAROUND: Use python from search path, the path detected by meson doesn't exist when running the Snap
      sed -e '1c#!/usr/bin/env python3' -i ${CRAFT_PART_INSTALL}/snap/lutris/current/bin/lutris
    
  gamemode:
    source: https://github.com/ashuntu/gamemode.git
    source-branch: "add-snap-support"
    plugin: meson
    organize:
      snap/lutris/current/usr: usr
    meson-parameters:
      - --prefix=/usr
    build-packages:
      - libsystemd-dev
      - pkg-config
      - libdbus-1-dev
    prime:
      - usr/bin/gamemoderun
      - usr/lib/*/libgamemode*.so.*
  
  
  lutris-runtime:
    after: [enable-i386]
    plugin: nil
    stage-packages:
      - cabextract
      - curl
      - fluid-soundfont-gs
      - gir1.2-glib-2.0
      - gir1.2-gnomedesktop-3.0
      - gir1.2-gtk-3.0
      - gir1.2-notify-0.7
      - gir1.2-webkit2-4.0
      - libgnutls30
      - libvulkan1
      - libxrandr2
      - mesa-utils
      - p7zip
      - psmisc
      - python3
      - python3-dbus
      - python3-gi
      - python3-pil
      - python3-requests
      - python3-setproctitle
      - python3-yaml
      - unzip
      - x11-xserver-utils
      - xterm
      - xz-utils
      - on amd64:
          - lib32gcc1
          - libc6-i386
          - libglu1-mesa:i386
          - libglvnd0:i386
          - libglx-mesa0:i386
          - libgnutls30:i386
          - libx11-6:i386
          - x11-xserver-utils:i386
    stage:
      - -lib/ld-linux.so.2
      - -usr/bin/cpp-7
      - -usr/lib/*/libjavascript*
      - -usr/lib/*/libwebkit*
      - -usr/share/doc/cpp/README.Debian
      - -usr/share/man/man1/cpp-7.1.gz
  
  graphics-core22:
    after: [lutris]
    source: https://github.com/MirServer/graphics-core22.git
    plugin: dump
    override-prime: |
      craftctl default
      ${CRAFT_PART_SRC}/bin/graphics-core22-cleanup mesa-core22 nvidia-core22
    prime:
    - bin/graphics-core22-wrapper
  
  
  wine:
    plugin: nil
    build-packages:
      - dpkg
      - wget
    override-build: |
      craftctl default

      ARCH="$(dpkg --print-architecture)"
      WINE_VER="8.0.1"

      # set snap version
      craftctl set-version "$WINE_VER"

      # wget and dpkg extract the wine debs
      ## supporting binaries which are arch-specific but the same filenames in both architectures so we only install the native architecture
      DEB_URLS="https://dl.winehq.org/wine-builds/ubuntu/dists/jammy/main/binary-${ARCH}/wine-stable_${WINE_VER}~jammy-1_${ARCH}.deb"

      ## wine loaders - this one is the native system architecture
      DEB_URLS="$DEB_URLS https://dl.winehq.org/wine-builds/ubuntu/dists/jammy/main/binary-${ARCH}/wine-stable-${ARCH}_${WINE_VER}~jammy-1_${ARCH}.deb"

      if [ "$ARCH" = "amd64" ]; then
        ## on amd64 builds we need to also bundle the i386 wine loaders
        DEB_URLS="$DEB_URLS https://dl.winehq.org/wine-builds/ubuntu/dists/jammy/main/binary-i386/wine-stable-i386_${WINE_VER}~jammy-1_i386.deb"
      fi

      for DEB_URL in ${DEB_URLS}; do
        DEB=$(basename "${DEB_URL}")
        echo "Downloading ${DEB_URL}..."
        wget --quiet "${DEB_URL}" -O "${CRAFT_PART_INSTALL}/${DEB}"
        echo "Unpacking ${DEB}..."
        dpkg -x "${CRAFT_PART_INSTALL}/${DEB}" ${CRAFT_PART_INSTALL}
        rm -f "${CRAFT_PART_INSTALL}/${DEB}"
      done

      #Cleanup
      rm -rf ${CRAFT_PART_INSTALL}/opt/wine-stable/share/applications
      rm -rf ${CRAFT_PART_INSTALL}/opt/wine-stable/share/man
      rm -rf ${CRAFT_PART_INSTALL}/usr

      # Disable winemenubuilder
      sed -i 's/winemenubuilder.exe -a -r/winemenubuilder.exe -r/g' "${CRAFT_PART_INSTALL}"/opt/wine-stable/share/wine/wine.inf
  
  
hooks:
  install:
    command-chain:
      - snap/command-chain/snapcraft-runner
      - snap/command-chain/desktop-launch
      - bin/gnome-extension-hack
  post-refresh:
    command-chain:
      - snap/command-chain/snapcraft-runner
      - snap/command-chain/desktop-launch
      - bin/gnome-extension-hack

layout:
  /etc/ld.so.cache:
    bind-file: $SNAP_DATA/etc/ld.so.cache
  /usr/share/libdrm:
    bind: $SNAP/graphics/usr/share/libdrm
  /usr/share/drirc.d:
    symlink: $SNAP/graphics/usr/share/drirc.d
  /usr/share/X11/XErrorDB:
    symlink: $SNAP/graphics/usr/share/X11/XErrorDB
  /usr/share/X11/locale:
    symlink: $SNAP/graphics/usr/share/X11/locale  
  /usr/lib/$CRAFT_ARCH_TRIPLET/webkit2gtk-4.0:
    bind: $SNAP/gnome-platform/usr/lib/$CRAFT_ARCH_TRIPLET/webkit2gtk-4.0
  

slots:
  lutris:
    interface: dbus
    bus: session
    name: net.lutris.Lutris

plugs:
  shmem:
    interface: shared-memory
    private: true
  graphics-core22:
    interface: content
    target: $SNAP/graphics
    default-provider: mesa-core22
  

environment:
  HOME: $SNAP_USER_COMMON
  PYTHONPATH: ${SNAP}/usr/lib/python3/dist-packages:$PYTHONPATH

apps:
  lutris:
    command-chain:
    - bin/graphics-core22-wrapper
    command: bin/gnome-extension-hack $SNAP/usr/bin/python3 $SNAP/bin/lutris -d
    extensions: [gnome]
    desktop: share/applications/net.lutris.Lutris.desktop
    common-id: net.lutris.Lutris
    plugs:
      - home
      - audio-playback
      - network
      - network-bind
      - network-status
      - raw-usb
      - joystick
      - audio-record
      - process-control
      - bluez
      - network-control
      - shmem
      - unity7
      - removable-media
      - optical-drive
      - screen-inhibit-control
      - hardware-observe
      - mount-observe
      - system-observe
    
